/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import "NSObject.h"

@class NSArray, NSDictionary, NSString;

@interface IDEExtendedPlatformInfo : NSObject
{
    NSDictionary *_productTypeIdentifiersToInterfaceBuilderDocumentUTIs;
    BOOL _supportsDeviceSelection;
    BOOL _wantsIntegrityCheckForApplicationCategory;
    BOOL _wantsHiDPIArtworkTargetUpgrade;
    BOOL _canBeJetsamedDuringGPUTracing;
    BOOL _tryOtherArchWhenDesignatedArchFails;
    BOOL _hasQualityOfService;
    BOOL _requiresGameCenterDeviceCompatibilityInfoPlistEntry;
    BOOL _requiresLocalGameCenterEntitlement;
    BOOL _onlySupportsAppStoreDeployment;
    BOOL _appStoreArchivesRequirePreciseSizeEstimate;
    BOOL _distributionShouldCopySwiftSupport;
    BOOL _distributionShouldCopyWatchKitSupport;
    NSString *_platformIdentifier;
    NSString *_bundleFormatApplicationPathFormatString;
    NSString *_embeddedProvisioningProfileName;
    NSString *_deploymentTargetSettingName;
    NSString *_deploymentTargetSettingHumanReadableNameTitleCase;
    NSString *_deploymentTargetSettingHumanReadableNameSentenceCase;
    NSString *_appStoreNameTitleCase;
    NSArray *_hiDPIArtworkTargetUpgradeProductTypesToExclude;
    NSString *_debuggingPlatformName;
    NSString *_gaugeCPUMeterScale;
    NSString *_recordedFramesMinimumVersionString;
    NSString *_codeSignIdentityDefaultAutomaticSelector;
    NSArray *_codeSignIdentityAutomaticSelectors;
    NSString *_conditionalSDKPostfix;
    NSString *_sdkName;
    NSString *_internalSDKName;
    NSArray *_productTypesRequiringProvisioning;
}

+ (void)_initializePlatformInfo:(id)arg1 fromExtension:(id)arg2;
+ (id)extendedPlatformInfoForPlatformIdentifier:(id)arg1;
- (void).cxx_destruct;
@property(readonly) BOOL appStoreArchivesRequirePreciseSizeEstimate; // @synthesize appStoreArchivesRequirePreciseSizeEstimate=_appStoreArchivesRequirePreciseSizeEstimate;
@property(readonly, copy) NSString *appStoreNameTitleCase; // @synthesize appStoreNameTitleCase=_appStoreNameTitleCase;
@property(readonly, copy) NSString *bundleFormatApplicationPathFormatString; // @synthesize bundleFormatApplicationPathFormatString=_bundleFormatApplicationPathFormatString;
@property(readonly) BOOL canBeJetsamedDuringGPUTracing; // @synthesize canBeJetsamedDuringGPUTracing=_canBeJetsamedDuringGPUTracing;
@property(readonly, copy) NSArray *codeSignIdentityAutomaticSelectors; // @synthesize codeSignIdentityAutomaticSelectors=_codeSignIdentityAutomaticSelectors;
@property(readonly, copy) NSString *codeSignIdentityDefaultAutomaticSelector; // @synthesize codeSignIdentityDefaultAutomaticSelector=_codeSignIdentityDefaultAutomaticSelector;
@property(readonly, copy) NSString *conditionalSDKPostfix; // @synthesize conditionalSDKPostfix=_conditionalSDKPostfix;
@property(readonly, copy) NSString *debuggingPlatformName; // @synthesize debuggingPlatformName=_debuggingPlatformName;
@property(readonly, copy) NSString *deploymentTargetSettingHumanReadableNameSentenceCase; // @synthesize deploymentTargetSettingHumanReadableNameSentenceCase=_deploymentTargetSettingHumanReadableNameSentenceCase;
@property(readonly, copy) NSString *deploymentTargetSettingHumanReadableNameTitleCase; // @synthesize deploymentTargetSettingHumanReadableNameTitleCase=_deploymentTargetSettingHumanReadableNameTitleCase;
@property(readonly, copy) NSString *deploymentTargetSettingName; // @synthesize deploymentTargetSettingName=_deploymentTargetSettingName;
@property(readonly) BOOL distributionShouldCopySwiftSupport; // @synthesize distributionShouldCopySwiftSupport=_distributionShouldCopySwiftSupport;
@property(readonly) BOOL distributionShouldCopyWatchKitSupport; // @synthesize distributionShouldCopyWatchKitSupport=_distributionShouldCopyWatchKitSupport;
@property(readonly, copy) NSString *embeddedProvisioningProfileName; // @synthesize embeddedProvisioningProfileName=_embeddedProvisioningProfileName;
@property(readonly, copy) NSString *gaugeCPUMeterScale; // @synthesize gaugeCPUMeterScale=_gaugeCPUMeterScale;
@property(readonly) BOOL hasQualityOfService; // @synthesize hasQualityOfService=_hasQualityOfService;
@property(readonly, copy) NSArray *hiDPIArtworkTargetUpgradeProductTypesToExclude; // @synthesize hiDPIArtworkTargetUpgradeProductTypesToExclude=_hiDPIArtworkTargetUpgradeProductTypesToExclude;
@property(readonly, copy) NSString *internalSDKName; // @synthesize internalSDKName=_internalSDKName;
@property(readonly) BOOL onlySupportsAppStoreDeployment; // @synthesize onlySupportsAppStoreDeployment=_onlySupportsAppStoreDeployment;
@property(readonly, copy) NSString *platformIdentifier; // @synthesize platformIdentifier=_platformIdentifier;
@property(readonly) Class portalEntitlementsCoordinatorPlatformClass;
@property(readonly) NSArray *productTypesRequiringProvisioning; // @synthesize productTypesRequiringProvisioning=_productTypesRequiringProvisioning;
@property(readonly, copy) NSString *recordedFramesMinimumVersionString; // @synthesize recordedFramesMinimumVersionString=_recordedFramesMinimumVersionString;
@property(readonly) BOOL requiresGameCenterDeviceCompatibilityInfoPlistEntry; // @synthesize requiresGameCenterDeviceCompatibilityInfoPlistEntry=_requiresGameCenterDeviceCompatibilityInfoPlistEntry;
@property(readonly) BOOL requiresLocalGameCenterEntitlement; // @synthesize requiresLocalGameCenterEntitlement=_requiresLocalGameCenterEntitlement;
@property(readonly, copy) NSString *sdkName; // @synthesize sdkName=_sdkName;
- (id)supportedInterfaceBuilderDocumentUTIsForProductType:(id)arg1;
@property(readonly) BOOL supportsDeviceSelection; // @synthesize supportsDeviceSelection=_supportsDeviceSelection;
@property(readonly) BOOL tryOtherArchWhenDesignatedArchFails; // @synthesize tryOtherArchWhenDesignatedArchFails=_tryOtherArchWhenDesignatedArchFails;
@property(readonly) BOOL wantsHiDPIArtworkTargetUpgrade; // @synthesize wantsHiDPIArtworkTargetUpgrade=_wantsHiDPIArtworkTargetUpgrade;
@property(readonly) BOOL wantsIntegrityCheckForApplicationCategory; // @synthesize wantsIntegrityCheckForApplicationCategory=_wantsIntegrityCheckForApplicationCategory;

@end

