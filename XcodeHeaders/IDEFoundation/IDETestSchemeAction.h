/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import <IDEFoundation/IDESchemeAction.h>

@class DVTNotificationToken, DVTObservingToken, IDESchemeBuildableReference, NSArray, NSDictionary, NSMutableArray, NSString;

@interface IDETestSchemeAction : IDESchemeAction
{
    NSMutableArray *_testableReferences;
    NSMutableArray *_loadingTestableReferences;
    NSString *_selectedDebuggerIdentifier;
    NSString *_selectedLauncherIdentifier;
    NSMutableArray *_commandLineArgumentEntries;
    NSMutableArray *_environmentVariableEntries;
    BOOL _shouldUseLaunchSchemeArgsEnv;
    DVTObservingToken *_testablesObservingToken;
    DVTObservingToken *_skippedTestsObservingToken;
    DVTObservingToken *_workspaceRunnableProductsToken;
    DVTNotificationToken *_buildablesToken;
    NSString *_buildConfiguration;
    NSArray *_hostBuildableReferences;
    IDESchemeBuildableReference *_testBuildableReferenceToUseForMacroExpansion;
}

+ (BOOL)_initializedForUserInteraction;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingBuildableReferenceToUseForMacroExpansion;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (id)keyPathsForValuesAffectingTestBuildableReferences;
- (void).cxx_destruct;
- (void)_commonInit;
- (void)_disableTestOrTestable:(id)arg1;
- (void)_enableTestOrTestable:(id)arg1;
- (id)_expandMacrosInString:(id)arg1;
- (BOOL)_isEnabledTest:(id)arg1;
- (BOOL)_isEnabledTestable:(id)arg1;
- (BOOL)_isTestEditable:(id)arg1;
- (void)_postEnabledStateNotification;
- (BOOL)_shouldDebugAppExtensions;
- (BOOL)_shouldDebugXPCServices;
- (id)_testableReferenceForTest:(id)arg1;
- (void)_updateTestActionBuildableToUseForMacroExpansion;
- (void)addCommandLineArguments:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addEnvironmentVariables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addMacroExpansion:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addTestables:(id)arg1 fromXMLUnarchiver:(id)arg2;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
- (id)buildableReferenceToUseForMacroExpansion;
@property(copy) NSArray *commandLineArgumentEntries; // @dynamic commandLineArgumentEntries;
@property(readonly) NSArray *commandLineArguments;
- (BOOL)doesNonActionWork;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)effectiveBlueprintForOptimizationProfileGenerationForSchemeCommand:(id)arg1;
@property(copy) NSArray *environmentVariableEntries; // @dynamic environmentVariableEntries;
@property(readonly) NSDictionary *environmentVariables;
- (id)filePathForOptimizationProfileFile:(id)arg1 withBuildParameters:(id)arg2 schemeCommand:(id)arg3;
- (id)firstBuildableContainingBuildSetting:(id)arg1 withBuildParameters:(id)arg2 schemeCommand:(id)arg3;
@property(readonly) NSArray *hostBuildableReferences;
- (id)init;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (BOOL)isTestOrTestableEnabled:(id)arg1;
@property(readonly, getter=isTestable) BOOL testable;
@property(readonly) NSMutableArray *mutableCommandLineArgumentEntries; // @dynamic mutableCommandLineArgumentEntries;
@property(readonly) NSMutableArray *mutableEnvironmentVariableEntries; // @dynamic mutableEnvironmentVariableEntries;
- (id)name;
- (BOOL)needsNewSchemeVersionForAppDataPackages;
- (BOOL)needsNewSchemeVersionForLocationSimulation;
- (void)primitiveInvalidate;
@property(copy) NSString *selectedDebuggerIdentifier; // @synthesize selectedDebuggerIdentifier=_selectedDebuggerIdentifier;
@property(copy) NSString *selectedLauncherIdentifier; // @synthesize selectedLauncherIdentifier=_selectedLauncherIdentifier;
- (void)setBuildableReferenceToUseForMacroExpansion:(id)arg1;
- (void)setRunContext:(id)arg1;
@property(nonatomic) BOOL shouldUseLaunchSchemeArgsEnv; // @synthesize shouldUseLaunchSchemeArgsEnv=_shouldUseLaunchSchemeArgsEnv;
- (void)setShouldUseLaunchSchemeArgsEnvFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setTestOrTestable:(id)arg1 enabled:(BOOL)arg2;
- (id)subtitle;
@property(readonly) NSArray *testBuildableReferences;
- (id)testOperationWithTestManager:(id)arg1 executionEnvironment:(id)arg2 withBuildOperation:(id)arg3 buildParameters:(id)arg4 schemeCommand:(id)arg5 actionRecord:(id)arg6 overridingTestingSpecifiers:(id)arg7 outError:(id *)arg8 actionCallbackBlock:(id)arg9;
- (void)testableDidChangeHost:(id)arg1;

// Remaining properties
@property(readonly) NSMutableArray *mutableTestableReferences; // @dynamic mutableTestableReferences;
@property(copy) NSArray *testableReferences; // @dynamic testableReferences;

@end

